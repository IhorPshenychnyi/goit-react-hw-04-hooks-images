{"version":3,"sources":["components/Modal/Modal.module.css","components/Button/Button.module.css","components/ImageGallery/ImageGallery.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.js","services/apiService.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/Modal/Modal.js","components/ImageGallery/ImageGallery.js","App.js","index.js","components/ImageGalleryItem/ImageGalleryItem.module.css"],"names":["module","exports","Searchbar","onSubmit","useState","searchQuery","setSearchQuery","className","s","evt","preventDefault","trim","SearchForm","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","api","fetchGallery","name","page","url","fetch","then","response","ok","json","Promise","reject","Error","ImageGalleryItem","webformatURL","largeImageURL","alt","onOpenModal","onClick","src","ImageGalleryItemImage","Button","modalRoot","document","querySelector","Modal","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","createPortal","Overlay","target","ImageGallery","clickButton","pictures","setPictures","error","setError","status","setStatus","setLargeImageURL","setAlt","imageAPI","images","total","hits","catch","prevState","scrollTo","top","documentElement","scrollHeight","behavior","imageURL","color","height","width","timeout","map","picture","tags","id","App","setPage","resetPage","query","ReactDOM","render","StrictMode","getElementById"],"mappings":"wIACAA,EAAOC,QAAU,CAAC,QAAU,uBAAuB,MAAQ,uB,mBCA3DD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,aAAe,qC,uCCAjCD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,iBAAmB,oCAAoC,sBAAwB,yCAAyC,gBAAkB,qC,4ICIhP,SAASC,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SACnB,EAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAiBA,OACE,wBAAQC,UAAWC,IAAEN,UAArB,SACE,uBAAMC,SAbW,SAAAM,GACnBA,EAAIC,iBAEuB,KAAvBL,EAAYM,SAIhBR,EAASE,GACTC,EAAe,MAKiBC,UAAWC,IAAEI,WAA3C,UACE,wBAAQC,KAAK,SAASN,UAAWC,IAAEM,iBAAnC,SACE,sBAAMP,UAAWC,IAAEO,sBAAnB,sBAGF,uBACER,UAAWC,IAAEQ,gBACbH,KAAK,OACLI,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,MAAOf,EACPgB,SA7BmB,SAAAZ,GACzBH,EAAeG,EAAIa,cAAcF,MAAMG,uB,6BCM3C,IAEeC,EAFH,CAAEC,aAZd,SAAsBC,EAAMC,GAC1B,IAAMC,EAAG,UAHM,2BAGN,cAAoBF,EAApB,iBAAiCC,EAAjC,gBAJK,qCAIL,wDAET,OAAOE,MAAMD,GAAKE,MAAK,SAAAC,GACrB,OAAIA,EAASC,GACJD,EAASE,OAGXC,QAAQC,OAAO,IAAIC,MAAJ,oBAAuBV,U,gBCP3CW,EAAmB,SAAC,GAKnB,IAJLC,EAII,EAJJA,aACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,IACAC,EACI,EADJA,YAEA,OACE,oBACElC,UAAWC,IAAE6B,iBACbK,QAAS,kBAAMD,EAAYF,EAAeC,IAF5C,SAIE,qBAAKG,IAAKL,EAAcE,IAAKA,EAAKjC,UAAWC,IAAEoC,2B,iBCX/CC,EAAS,SAAC,GAAiB,IAAfH,EAAc,EAAdA,QAChB,OACE,wBAAQ7B,KAAK,SAAS6B,QAASA,EAASnC,UAAWC,IAAEqC,OAArD,wB,iBCAEC,EAAYC,SAASC,cAAc,eAEzC,SAASC,EAAT,GAAiD,IAAhCV,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,IAAKU,EAAW,EAAXA,QACnCC,qBAAU,WAGR,OAFAC,OAAOC,iBAAiB,UAAWC,GAE5B,WACLF,OAAOG,oBAAoB,UAAWD,OAI1C,IAAMA,EAAgB,SAAAE,GACL,WAAXA,EAAEC,MACJP,KAUJ,OAAOQ,uBACL,qBAAKnD,UAAWC,IAAEmD,QAASjB,QAPF,SAAAjC,GACrBA,EAAIa,gBAAkBb,EAAImD,QAC5BV,KAKF,SACE,qBAAK3C,UAAWC,IAAEyC,MAAlB,SACE,qBAAKN,IAAKJ,EAAeC,IAAKA,QAGlCM,G,2BCvBJ,SAASe,EAAT,GAA2D,IAAnCxD,EAAkC,EAAlCA,YAAasB,EAAqB,EAArBA,KAAMmC,EAAe,EAAfA,YACzC,EAAgC1D,mBAAS,IAAzC,mBAAO2D,EAAP,KAAiBC,EAAjB,KACA,EAA0B5D,mBAAS,MAAnC,mBAAO6D,EAAP,KAAcC,EAAd,KACA,EAA4B9D,mBAAS,QAArC,mBAAO+D,EAAP,KAAeC,EAAf,KACA,EAA0ChE,mBAAS,IAAnD,mBAAOmC,EAAP,KAAsB8B,EAAtB,KACA,EAAsBjE,mBAAS,IAA/B,mBAAOoC,EAAP,KAAY8B,EAAZ,KAEAnB,qBAAU,WACH9C,IAIQ,IAATsB,GACFyC,EAAU,WACVG,EACG9C,aAAapB,EAAasB,GAC1BG,MAAK,SAAA0C,GACAA,EAAOC,MAAQ,GACjBT,EAAYQ,EAAOE,MACnBN,EAAU,cAEVF,EAAS,aAAD,OAAc7D,IACtB+D,EAAU,gBAGbO,OAAM,SAAAV,GACLC,EAASD,GACTG,EAAU,gBAGdG,EACG9C,aAAapB,EAAasB,GAC1BG,MAAK,SAAA0C,GACJR,GAAY,SAAAY,GAAS,4BAAQA,GAAR,YAAsBJ,EAAOE,UAClDN,EAAU,eAEXtC,MAAK,WACJsB,OAAOyB,SAAS,CACdC,IAAK/B,SAASgC,gBAAgBC,aAC9BC,SAAU,cAGbN,OAAM,SAAAV,GACLC,EAASD,GACTG,EAAU,kBAGf,CAAC/D,EAAasB,IAEjB,IAAMc,EAAc,SAACyC,EAAU1C,GAC7B6B,EAAiBa,GACjBZ,EAAO9B,IAQT,MAAe,SAAX2B,EACK,gDAGM,YAAXA,EAEA,cAAC,IAAD,CACEtD,KAAK,YACLsE,MAAM,UACNC,OAAQ,GACRC,MAAO,GACPC,QAAS,MAKA,aAAXnB,EACK,4BAAIF,IAGE,aAAXE,EAEA,gCACE,oBAAI5D,UAAWC,IAAEqD,aAAjB,SACGE,EAASwB,KAAI,SAAAC,GAAO,OACnB,cAAC,EAAD,CAEElD,aAAckD,EAAQlD,aACtBC,cAAeiD,EAAQjD,cACvBC,IAAKgD,EAAQC,KACbhD,YAAaA,GAJR+C,EAAQE,SAQnB,cAAC,EAAD,CAAQhD,QAASoB,IAChBvB,GACC,cAACU,EAAD,CACEV,cAAeA,EACfC,IAAKA,EACLU,QA5CW,WACnBmB,EAAiB,IACjBC,EAAO,eAuBT,E,MCvDaqB,MA7Bf,WACE,MAAsCvF,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAwBF,mBAAS,GAAjC,mBAAOuB,EAAP,KAAaiE,EAAb,KAWMC,EAAY,WAChB,OAAOD,EAAQ,IAGjB,OACE,gCACE,cAAC1F,EAAD,CAAWC,SAfU,SAAA2F,GACvBxF,EAAewF,GACfD,OAcE,cAAChC,EAAD,CACExD,YAAaA,EACbsB,KAAMA,EACNmC,YAdW,WACf,OAAO8B,GAAQ,SAAAhB,GAAS,OAAIA,EAAY,YCX5CmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlD,SAASmD,eAAe,U,kBCT1BlG,EAAOC,QAAU,CAAC,iBAAmB,2CAA2C,sBAAwB,mD","file":"static/js/main.ff668027.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3IBXg\",\"Modal\":\"Modal_Modal__1QyHN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1a7GZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1LmDO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__3szeL\",\"SearchForm\":\"Searchbar_SearchForm__TGPrP\",\"SearchFormButton\":\"Searchbar_SearchFormButton__1-4-B\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__ijOiO\",\"SearchFormInput\":\"Searchbar_SearchFormInput__48n0V\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './Searchbar.module.css';\n\nfunction Searchbar({ onSubmit }) {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleSearchChange = evt => {\n    setSearchQuery(evt.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    if (searchQuery.trim() === '') {\n      return;\n    }\n\n    onSubmit(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <header className={s.Searchbar}>\n      <form onSubmit={handleSubmit} className={s.SearchForm}>\n        <button type=\"submit\" className={s.SearchFormButton}>\n          <span className={s.SearchFormButtonLabel}>Search</span>\n        </button>\n\n        <input\n          className={s.SearchFormInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={searchQuery}\n          onChange={handleSearchChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport { Searchbar };\n","const API_KEY = '22580810-f54a4b0451f19078aae6377b4';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nfunction fetchGallery(name, page) {\n  const url = `${BASE_URL}?q=${name}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n\n  return fetch(url).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(new Error(`Not found ${name}`));\n  });\n}\n\nconst api = { fetchGallery };\n\nexport default api;\n","import PropTypes from 'prop-types';\n\nimport s from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({\n  webformatURL,\n  largeImageURL,\n  alt,\n  onOpenModal,\n}) => {\n  return (\n    <li\n      className={s.ImageGalleryItem}\n      onClick={() => onOpenModal(largeImageURL, alt)}\n    >\n      <img src={webformatURL} alt={alt} className={s.ImageGalleryItemImage} />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  onOpenModal: PropTypes.func.isRequired,\n};\n\nexport { ImageGalleryItem };\n","import PropTypes from 'prop-types';\n\nimport s from './Button.module.css';\n\nconst Button = ({ onClick }) => {\n  return (\n    <button type=\"button\" onClick={onClick} className={s.Button}>\n      Load more\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport { Button };\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nfunction Modal({ largeImageURL, alt, onClose }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleOverlayClick = evt => {\n    if (evt.currentTarget === evt.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className={s.Overlay} onClick={handleOverlayClick}>\n      <div className={s.Modal}>\n        <img src={largeImageURL} alt={alt} />\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  largeImageURL: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport { Modal };\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Loader from 'react-loader-spinner';\n\nimport imageAPI from '../../services/apiService';\nimport { ImageGalleryItem } from '../ImageGalleryItem/ImageGalleryItem';\nimport { Button } from '../Button/Button';\nimport { Modal } from '../Modal/Modal';\n\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport s from './ImageGallery.module.css';\n\nfunction ImageGallery({ searchQuery, page, clickButton }) {\n  const [pictures, setPictures] = useState([]);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const [largeImageURL, setLargeImageURL] = useState('');\n  const [alt, setAlt] = useState('');\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    if (page === 1) {\n      setStatus('pending');\n      imageAPI\n        .fetchGallery(searchQuery, page)\n        .then(images => {\n          if (images.total > 0) {\n            setPictures(images.hits);\n            setStatus('resolved');\n          } else {\n            setError(`Not found ${searchQuery}`);\n            setStatus('rejected');\n          }\n        })\n        .catch(error => {\n          setError(error);\n          setStatus('rejected');\n        });\n    } else {\n      imageAPI\n        .fetchGallery(searchQuery, page)\n        .then(images => {\n          setPictures(prevState => [...prevState, ...images.hits]);\n          setStatus('resolved');\n        })\n        .then(() => {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n        })\n        .catch(error => {\n          setError(error);\n          setStatus('rejected');\n        });\n    }\n  }, [searchQuery, page]);\n\n  const onOpenModal = (imageURL, alt) => {\n    setLargeImageURL(imageURL);\n    setAlt(alt);\n  };\n\n  const onCloseModal = () => {\n    setLargeImageURL('');\n    setAlt('');\n  };\n\n  if (status === 'idle') {\n    return <p>Enter something</p>;\n  }\n\n  if (status === 'pending') {\n    return (\n      <Loader\n        type=\"ThreeDots\"\n        color=\"#00BFFF\"\n        height={80}\n        width={80}\n        timeout={3000}\n      />\n    );\n  }\n\n  if (status === 'rejected') {\n    return <p>{error}</p>;\n  }\n\n  if (status === 'resolved') {\n    return (\n      <div>\n        <ul className={s.ImageGallery}>\n          {pictures.map(picture => (\n            <ImageGalleryItem\n              key={picture.id}\n              webformatURL={picture.webformatURL}\n              largeImageURL={picture.largeImageURL}\n              alt={picture.tags}\n              onOpenModal={onOpenModal}\n            />\n          ))}\n        </ul>\n        <Button onClick={clickButton} />\n        {largeImageURL && (\n          <Modal\n            largeImageURL={largeImageURL}\n            alt={alt}\n            onClose={onCloseModal}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nImageGallery.propTypes = {\n  searchQuery: PropTypes.string.isRequired,\n  page: PropTypes.number.isRequired,\n  clickButton: PropTypes.func.isRequired,\n};\n\nexport { ImageGallery };\n","import { useState } from 'react';\n\nimport { Searchbar } from './components/Searchbar/Searchbar';\nimport { ImageGallery } from './components/ImageGallery/ImageGallery';\n\nimport './App.css';\n\nfunction App() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [page, setPage] = useState(1);\n\n  const handleFormSubmit = query => {\n    setSearchQuery(query);\n    resetPage();\n  };\n\n  const nextPage = () => {\n    return setPage(prevState => prevState + 1);\n  };\n\n  const resetPage = () => {\n    return setPage(1);\n  };\n\n  return (\n    <div>\n      <Searchbar onSubmit={handleFormSubmit} />\n      <ImageGallery\n        searchQuery={searchQuery}\n        page={page}\n        clickButton={nextPage}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__38n6G\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__1D8kE\"};"],"sourceRoot":""}